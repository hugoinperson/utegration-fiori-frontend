/* ================================ */
/* CSS for control sap.m/InputBase  */
/* Belize theme                     */
/* ================================ */

.sapMInputBase {
	height: 3rem;
}

.sapMInputBaseWidthPadding {
	padding: 0.25rem 0;
}

.sapMInputBaseInner {
	color: @sapUiFieldTextColor;
	background: @sapUiFieldBackground;
	border: 1px solid @sapUiFieldBorderColor;
	font-size: @sapMFontMediumSize;
	font-family: @sapUiFontFamily;
	line-height: normal;
	height: 2.5rem;
	padding: 0 0.75rem;
}

.sapMInputBaseInner::-webkit-input-placeholder {
	color: @sapUiFieldPlaceholderTextColor;
	font-size: @sapMFontMediumSize;
	font-style: italic;
}

.sapMInputBaseInner::-moz-placeholder {
	color: @sapUiFieldPlaceholderTextColor;
	font-size: @sapMFontMediumSize;
	font-style: italic;
}

.sapMInputBaseInner:-ms-input-placeholder {
	color: @sapUiFieldPlaceholderTextColor;
	font-size: @sapMFontMediumSize;
	font-style: italic;
}

// When disabled or read-only hide placeholder by setting opacity to 0
.sapMInputBaseDisabled {
	.sapMInputBaseInner::-webkit-input-placeholder {
		opacity: 0;
	}

	.sapMInputBaseInner::-moz-placeholder {
		opacity: 0;
	}

	.sapMInputBaseInner:-ms-input-placeholder {
		color: @sapUiFieldBackground;
	}
}

.sapMInputBaseReadonly {
	.sapMInputBaseInner::-webkit-input-placeholder {
		opacity: 0;
	}

	.sapMInputBaseInner::-moz-placeholder {
		opacity: 0;
	}

	.sapMInputBaseInner:-ms-input-placeholder {
		color: @sapUiFieldReadOnlyBackground;
	}
}

.sapMInputBasePlaceholder {
	color: @sapUiFieldPlaceholderTextColor;
	font-size: @sapMFontMediumSize;
	font-style: italic;
	line-height: 2.5rem;
	padding: 0 0.75rem;
}

.sapMInputBaseStateInner {
	border: 2px solid @sapUiFieldBorderColor;
	padding: 0 0.6875rem;
}

.sapMInputBaseWarningInner {
	background: @sapUiFieldWarningBackground;
	border-color: @sapUiFieldWarningColor;
}

.sapMInputBaseErrorInner {
	background: @sapUiFieldInvalidBackground;
	border-color: @sapUiFieldInvalidColor;
}

.sapMInputBaseSuccessInner {
	background: @sapUiFieldSuccessBackground;
	border-color: @sapUiFieldSuccessColor;
}

.sapMInputBaseReadonlyInner {
	border-color: @sapUiFieldReadOnlyBorderColor;
	background: @sapUiFieldReadOnlyBackground;
}

html.sap-desktop .sapMInputBaseInner:not(.sapMInputBaseReadonlyInner):focus {
	outline: 1px dotted @sapUiContentFocusColor;
	outline-offset: -3px;
}

html.sap-desktop .sapMInputBaseStateInner:not(.sapMInputBaseReadonlyInner):focus {
	outline-offset: -4px;
}

.sapMInputBaseInner:not(.sapMInputBaseReadonlyInner):not(.sapMInputBaseStateInner):focus {
	border-color: @sapUiFieldFocusBorderColor;
}

.sapMInputBaseInner:not(.sapMInputBaseReadonlyInner):not(.sapMInputBaseStateInner):not(.sapMInputBaseDisabledInner):hover {
	background: @sapUiFieldHoverBackground;
	border-color: @sapUiFieldHoverBorderColor;
}

.sapMInputBaseInner:not(.sapMInputBaseReadonlyInner):not(.sapMInputBaseStateInner):not(.sapMInputBaseDisabledInner):active {
  	border-color: @sapUiFieldBorderColor;
}

.sapMILI-CTX .sapMInputBaseInner {
	text-align: right;
	background: transparent;
}

html[dir=rtl] .sapMILI-CTX .sapMInputBaseInner,
html[dir=rtl] .sapMILI-CTX .sapMInputBasePlaceholder {
	text-align: left;
}

.sapMILI-CTX .sapMInputBasePlaceholder {
	text-align: right;
}

.sapMLIBActive .sapMInputBaseInner {
	color: @sapUiListActiveTextColor;
	background: transparent;
}

.sapMLIBActive .sapMInputBaseInner::-webkit-input-placeholder {
	color: @sapUiListActiveTextColor;
}

/* Compact size */
.sapUiSizeCompact {

	.sapMInputBase {
		height: 2rem;
	}

	.sapMInputBaseInner {
		height: 1.625rem;
		padding: 0 0.5rem;
	}

	.sapMInputBasePlaceholder {
		line-height: 1.625rem;
		padding: 0 0.5rem;
	}
}

.sapUiSizeCompact .sapMInputBaseWidthPadding {
	padding: 0.1875rem 0;
}

/* Compact size */
.sapUiSizeCondensed .sapUiTableCell {
	.sapMInputBase {
		height: 1.5rem;
		padding: 0;
	}

	.sapMInputBaseInner:not(.sapMInputBaseStateInner) {
		border-color: transparent;
	}

	.sapMInputBaseInner {
		height: 1.5rem;
	}

	.sapMInputBasePlaceholder {
		line-height: 1.5rem;
	}
}

/* Input selection fix -
 * Due to the fact that the CSS parsing rules require dropping the whole rule when encountering an invalid
 * pseudo-element, two separate rules must be written */
.sapMInputBaseInner {

	&::selection {
		background: @sapUiSelected;
		color: @sapUiContentContrastTextColor;
	}

	&::-moz-selection {
		background: @sapUiSelected;
		color: @sapUiContentContrastTextColor;
	}
}

/* Google chrome and Safari input selection fix:
 * The browser renders the selection background with 50% opacity by default.
 * The solution is to use fade with a value for alpha 99 if it's set 100 the browser ignores it.
 */
html[data-sap-ui-browser^="sf"],
html[data-sap-ui-browser^="cr"] {
	.sapMInputBaseInner::selection {
		background: fade(@sapUiSelected, 99);
	}
}